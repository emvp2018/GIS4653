#Title: module
#Authors: Emily Wong, Jeff Clinard, Colton Snelling
#Description: This contains the functions to be called by the main module.

#POP = population - sum of total population in each county
#AGE - average age for each population per county
#SEX - total population per sex per county
#MEDIAN_INCOME - median income for each population within each county
#Demographics to explore
# Total Pop (HD01_S001), Total Pop 18+ (HD01_S022), (Total Male Pop (HD01_S026), Median Male Age (HD01_S045), 
#Total Male Pop 18+ (HD01_S047))-All for women too (HD01_S051, HD01_S070, HD01_S072)
# Total Race, Total White, Black, American Indian, Asian, Pacific, Other, Total Two Races

import arcpy, os
from arcpy import env

env.workspace =
env.overwriteOutput = True


def year_select():  # Ask user to pick an election year - 2008 or 2012
    print 'Which election year would you like to use?: 2008 or 2012'
    x = raw_input('Provide Selection: ')
    if x == '2008':
        return x
    elif x == '2012':
        return x
    else:
        print
        'Invalid Input'

def year_2008(): #User selects year 2008

    print 'Which attributes would you like to use?: Sex, Median Age, Ethnicity, Political Affiliation, Voter Turnout, Total Population'
    x = raw_input('Provide Selection: ')
    
       if x == 'Sex':
        print 'Would you like to find counties with majority male or majority female? :'
        sex = raw_input('Male or Female: ')
        if sex == 'Male':
            in_layer_or_view = 'HD02_S026' #Total Percent Male
        elif sex == 'Female':
            in_layer_or_view = 'HD02_S051' #Total Percent Female
        else:
            print('INVALID INPUT')

    elif x == 'Median Age':
        in_layer_or_view = 'HD01_S020' #Total Median Age

    elif x == 'Ethnicity':
        print 'What ethnicity would you like to use?: White, African American, American Indian, Asian, Hawaiian, Other'
        ethnicity = raw_input('Please Choose: White, African American, American Indian, Asian, Hawaiian, Other')

        if ethnicity == 'White'
            print 'Okay, counties with majority white population'
            in_layer_or_view = 'HD02_S078' #Percent White Population

        if ethnicity == 'African American'
            print 'Okay, counties with majority African American population'
            in_layer_or_view = 'HD02_S079' #Percent African American Population

        if ethnicity == 'American Indian'
            print 'Okay, counties with majority American Indian population'
            in_layer_or_view = 'HD02_S080' #Percent American Indian Population

        if ethnicity == 'Asian'
            print 'Okay, counties with majority Asian population'
            in_layer_or_view = 'HD02_S081' #Percent Asian Population

        if ethnicity == 'Hawaiian'
            print 'Okay, counties with majority Hawaiian population'
            in_layer_or_view = 'HD02_S089'  # Percent Hawaiian Population

        if ethnicity == 'Other'
            print 'Okay, counties with majority \'other\' population'
            in_layer_or_view = 'HD02_S094' #Percent 'Other' Population

        else:
            print('INVALID INPUT')


    elif x == 'Political Affiliation':
        print ' What political affiliation would you like to select?: Republican or Democrat'
        politic_aff = raw_input('Republican or Democrat: ')
        if politic_aff == 'Republican'
        in_layer_or_view = '' #Percent Population is Republican
        elif politic_aff == 'Democrat'
        in_layer_or_view = '' #Percent Population is Democrat
        else:
            print('INVALID INPUT')

    elif x == 'Voter Turnout':
        in_layer_or_view = '' #Total Amount of Voters

    elif x == 'Total Population':
        in_layer_or_view = 'HD01_S001' #Total Population Over 18

    else:
        print('INVALID INPUT')

def dissolve_tracts():
  arcpy.Dissolve_management("tracts.shp", "C:/Data/counties_dissolved.shp", countyID, 
  [["HD01_S001", SUM], ["HD01_S020", MEDIAN], ["HD01_S022", SUM], ["HD02_S022", MEAN], ["HD01_S026", SUM], ["HD02_S026", MEAN], 
  ["HD01_S045", MEDIAN], ["HD01_S047", SUM], ["HD02_S047", MEAN], ["HD01_S051", SUM], ["HD02_S051", MEAN], ["HD01_S070", MEDIAN], 
  ["HD01_S072", SUM], ["HD02_S072", MEAN], ["HD01_S071", SUM], ["HD02_S071", MEAN], ["HD01_S078", SUM], ["HD02_S078", MEAN], 
  ["HD01_S079", SUM], ["HD02_S079", MEAN], ["HD01_S080", SUM], ["HD02_S080", MEAN], ["HD01_S081", SUM], ["HD02_S081", MEAN],
  ["HD01_S089", SUM], ["HD02_S089", MEAN], ["HD01_S094", SUM], ["HD02_S094", MEAN], ["HD01_S095", SUM], ["HD02_S095", MEAN], 
  ["HD01_S114", SUM], ["HD02_S114", MEAN]])
  
  #DO NOT DELETE THE HEADINGS OR THIS IS ALL FOR NAUGHT.
  
def join()
census_join = AddJoin_management (tl_2010_06_tract10, GEOID, 2010_census_data, ID2,)

defcounty join()
county_join = AddJoin_management (tl_2010_06_tracct10, NAME10, Export_Output_2, F2,) 

