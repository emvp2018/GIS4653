#Title: module
#Authors: Emily Wong, Jeff Clinard, Colton Snelling
#Description: This contains the functions to be called by the main module.

#POP = population - sum of total population in each county
#AGE - average age for each population per county
#SEX - total population per sex per county
#MEDIAN_INCOME - median income for each population within each county
#Demographics to explore
# Total Pop (HD01_S001), Total Pop 18+ (HD01_S022), (Total Male Pop (HD01_S026), Median Male Age (HD01_S045), 
#Total Male Pop 18+ (HD01_S047))-All for women too (HD01_S051, HD01_S070, HD01_S072)
# Total Race, Total White, Black, American Indian, Asian, Pacific, Other, Total Two Races

import arcpy, os
from arcpy import env

env.workspace = "C:/Users/Data/"
env.overwriteOutput = True


def year_select():  # Ask user to pick an election year - 2008 or 2012
    print 'Which election year would you like to use?: 2008 or 2012'
    x = raw_input('Provide Selection: ')
    if x == '2008':
        return x
    elif x == '2012':
        return x
    else:
        print
        'Invalid Input'
        
        

def year_2008(): #User selects year 2008

    print 'Which attribute would you like to use?: Sex, Median Age, Ethnicity, Political Affiliation, Voter Turnout, Total Population'
    x = raw_input('Provide Selection: ')



    if x == 'Sex':
        print 'Would you like to find counties with majority Male or majority Female? :'
        sex = raw_input('Male or Female: ')
        if sex == 'Male':
            in_layer_or_view = 'HD02_S026' #Total Percent Male > Total Percent Female
            attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"HD02_S026" > "HD02_S051"')
        elif sex == 'Female':
            in_layer_or_view = 'HD02_S051' #Total Percent Female > Total Percent Male
            attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"HD02_S051" > "HD02_S026"')
        else:
            print('INVALID INPUT')

    elif x == 'Median Age':
        in_layer_or_view = 'HD01_S020' #Total Median Age

    elif x == 'Ethnicity':
        print 'What ethnicity would you like to use?: White, African American, American Indian, Asian, Hawaiian, Other'
        ethnicity = raw_input('Provide Selection: ')

        if ethnicity == 'White':
            print 'Okay, counties with majority white population'
            in_layer_or_view = 'HD02_S078' #Percent White Population > 50%
            attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"HD02_S078" > 50')

        if ethnicity == 'African American':
            print 'Okay, counties with majority African American population'
            in_layer_or_view = 'HD02_S079' #Percent African American Population > 50%
            attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"HD02_S079" > 50')

        if ethnicity == 'American Indian':
            print 'Okay, counties with majority American Indian population'
            in_layer_or_view = 'HD02_S080' #Percent American Indian Population > 50%
            attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"HD02_S080" > 50')

        if ethnicity == 'Asian':
            print 'Okay, counties with majority Asian population'
            in_layer_or_view = 'HD02_S081' #Percent Asian Population > 50%
            attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"HD02_S081" > 50')

        if ethnicity == 'Hawaiian':
            print 'Okay, counties with majority Hawaiian population'
            in_layer_or_view = 'HD02_S089'  # Percent Hawaiian Population > 50%
            attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"HD02_S089" > 50')

        if ethnicity == 'Other':
            print 'Okay, counties with majority \'other\' population'
            in_layer_or_view = 'HD02_S094' #Percent 'Other' Population > 50%
            attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"HD02_S094" > 50')

        else:
            print('INVALID INPUT')


    elif x == 'Political Affiliation':
        print ' What political affiliation would you like to select?: Republican or Democrat'
        political_aff = raw_input('Provide Selection: ')

        if political_aff == 'Republican':
        in_layer_or_view = '' #Percent Population is Republican > Percent Population Democrat
        attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"" > 50)


        elif political_aff == 'Democrat':
        in_layer_or_view = '' #Percent Population is Democrat > Percent Population Republican
        attribute = arcpy.SelectLayerByAttribute_management(in_layer_or_view, 'SUBSET_SELECTION', '"" > 50)

        else:
            print('INVALID INPUT')

    elif x == 'Voter Turnout':
        in_layer_or_view = '' #Total Amount of Voters per County

    elif x == 'Total Population':
        in_layer_or_view = 'HD01_S001' #Total Population Over 18 per County

    else:
        print('INVALID INPUT')


    output_feat = SelectLayerByAttribute_management(attribute, 'NEW_SELECTION')
    print 'Would you like to choose another attribute to narrow your results?: Yes or No'
    add_more = raw_input('Provide Selection: ')

    if add_more == 'Yes':
        while add_more == 'Yes':  # Allows the user to add more than one attribute
            print 'Which attribute would you like to use?: Sex, Median Age, Ethnicity, Political Affiliation, Voter Turnout, Total Population'
            loop_select = raw_input('Provide Selection: ')
            arcpy.SelectLayerByAttribute_management(output_feat, "SUBSET_SELECTION", loop_select)
            add_more = raw_input('Do you want to choose another file as well? Yes or No: ')
    elif add_more == 'No':
        print 'Okay. All done then!'
    else:
        print 'INVALID INPUT'


def join()
'''joins tracts to census data'''
arcpy.AddJoin_management ("tl_2010_06_tract10.shp", "GEOID10", "2010_census_data.csv", "GEOID")           

def dissolve_tracts():
  '''Dissolve census tracts into counties'''
  arcpy.Dissolve_management("tl_2010_06_tract10.shp", "C:/Data/counties_dissolved.shp", countyID, 
  [["HD01_S001", SUM], ["HD01_S020", MEDIAN], ["HD01_S022", SUM], ["HD02_S022", MEAN], ["HD01_S026", SUM], ["HD02_S026", MEAN], 
  ["HD01_S045", MEDIAN], ["HD01_S047", SUM], ["HD02_S047", MEAN], ["HD01_S051", SUM], ["HD02_S051", MEAN], ["HD01_S070", MEDIAN], 
  ["HD01_S072", SUM], ["HD02_S072", MEAN], ["HD01_S071", SUM], ["HD02_S071", MEAN], ["HD01_S078", SUM], ["HD02_S078", MEAN], 
  ["HD01_S079", SUM], ["HD02_S079", MEAN], ["HD01_S080", SUM], ["HD02_S080", MEAN], ["HD01_S081", SUM], ["HD02_S081", MEAN],
  ["HD01_S089", SUM], ["HD02_S089", MEAN], ["HD01_S094", SUM], ["HD02_S094", MEAN], ["HD01_S095", SUM], ["HD02_S095", MEAN], 
  ["HD01_S114", SUM], ["HD02_S114", MEAN]])
  
  #DO NOT DELETE THE HEADINGS OR THIS IS ALL FOR NAUGHT.

def county_join()
'''joins tracts to counties'''
arc.pyAddJoin_management ("tl_2010_06_tracct10.shp", "NAME10", "counties_dissolved.shp", "F2") 

